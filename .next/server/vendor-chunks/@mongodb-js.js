"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@mongodb-js";
exports.ids = ["vendor-chunks/@mongodb-js"];
exports.modules = {

/***/ "(ssr)/./node_modules/@mongodb-js/saslprep/dist/code-points-data.js":
/*!********************************************************************!*\
  !*** ./node_modules/@mongodb-js/saslprep/dist/code-points-data.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst zlib_1 = __webpack_require__(/*! zlib */ \"zlib\");\nexports[\"default\"] = (0, zlib_1.gunzipSync)(Buffer.from(\"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\", \"base64\")); //# sourceMappingURL=code-points-data.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1vbmdvZGItanMvc2FzbHByZXAvZGlzdC9jb2RlLXBvaW50cy1kYXRhLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFNBQVNDLG1CQUFPQSxDQUFDLGtCQUFNO0FBQzdCSCxrQkFBZSxHQUFHLENBQUMsR0FBR0UsT0FBT0csVUFBVSxFQUFFQyxPQUFPQyxJQUFJLENBQUMsNG5GQUE0bkYsWUFDanJGLDRDQUE0QyIsInNvdXJjZXMiOlsid2VicGFjazovL2FkbWluLy4vbm9kZV9tb2R1bGVzL0Btb25nb2RiLWpzL3Nhc2xwcmVwL2Rpc3QvY29kZS1wb2ludHMtZGF0YS5qcz8yY2Y1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgemxpYl8xID0gcmVxdWlyZShcInpsaWJcIik7XG5leHBvcnRzLmRlZmF1bHQgPSAoMCwgemxpYl8xLmd1bnppcFN5bmMpKEJ1ZmZlci5mcm9tKCdINHNJQUFBQUFBQUNBKzNkVFlnY1dSMEE4RmZUbmVrUTQ3YUNrQnhpWnBZVjhSaHdZUU03YkEva3NvTGdTUkQwSU9TaWVQQWtMcm93dldTRjRDa0hFVzg1Nk1sVFFIQTlSS1oxWkpPRHNFY1ZjVE95aHhVRWJYZFh0cFBwMVBOVlYzOVV6NGN6RXlhVFZPYjNHNmE3WHRXcnIvZGV2WDQ5LytxZWtHMkdvN0FhMmpIR3lvekcrRG1yemkybVAveGIvek1oTEkrV2xSbTJieXVibTJoMGl2Vmk3Qll6dXNWanVOa3QxbDl1RldzdXRXTDhPUDRyelY5S2VYZHNLeDFIRmhiU2M2dklHMGZLQloxNFVOZkxGUzZGUnJHUnRYaDk4WnZwaEwveDR1TFYvSU96YWF0L3ZsaWt2L1RpeGF2eFI4UFFpdGZQcEtOYmZmWFN3Z3RyOGZWMDdHWCtMMTk2N3Vyd2c1VzAvdDBMVjM3eS9vV0ZsUXRYOHBpbmc3cmVYRTNMVDY4MHI5eVBLeW4vM1ZuNjRTd2RWczZtL0tOMHlIcnA5RCtSdlhzcXBlNk1TaWE1bUg2TFNvZy8vWHEvKytPNzRZVlRqZkRGV0syVkl1TlNlbWlQcHBwaGNWWWV5emN1ZEtxRk1pcTZjczN2VmtyemxjbkUwbXhlWjFKZjJaWHNTdms4VG1SWldZZHBhbHlkeGQ1YmM4ZVVrdDF3bEVidHFUVkxyOFhRTEZwS01iK2RwcjlTYlNPdDRvelRnWFVxOCtJaG04Y1R0MHNodEN2VDZkd2FvNnN4UGY1eWRtVTIwOC9aMHlIOEladGx2WmkzZTVmRzEyeW4zUExTZFB2blE3dnNLOXJ4eUtwcWV2ekZaR1ZmdTNZSGV6dmJuYnZpdDlYZG01ZkdiZi9NWjdQdXVOclRqTEpuYW9mSDdnbTBoK1ZLVS9nL3RkVW9jcmVyM2NPNHlPY3V5Y0dveUxyYmE2VGErbHJsbmtaNW50dldDcmZWMzl3TFR1Tmc5UXZzdkhiMzdQOEJBR0NQMGVOVE9INXN6ZjE1NEptbk5RSWNuN2IrRnppeUFmWDRlV25uK0M2TG00TTBtajMxdWJrVmlpRFY0V0x2czU2cU41NHhHUzNIV0VSNXN1Nm5RdFp1Ymw5dGNZLzRhdGJyOWU1a1dld2V3L2cyYThmZHkyWWFhOTcrcGdRQUFBQUFBSUJIdHQrZFltV3dhTi9ieUk1Zy85UFlWZk12YjRZdnZEcE9MSnh2Rmd1ZVA5VmJQWGg4L3lDWlZpWnhOWUFUYWVqbURRQUFBQUNnZmpKLzNRVUE0SkQzUHgxSW5UKzVQdFFDQUFBQUFBQUFBS0QyeFA4QkFBQUFBQUFBb1A3RS93RUFBQUFBQUFDZy9zVC9BUUFBQUFBQUFLRCt4UDhCQUFBQUFBQUFvUDdFL3dFQUFBQUFBQUNnL3NUL0FRQUFBQUFBQUtEK3hQOEJBQUFBQUFBQW9QN0Uvd0VBQUFBQUFBQ2cvc1QvQVFBQUFBQUFBS0QreFA4QkFBQUFBQUFBb1A2RzYra2hWQ2dTQUFBQUFBQUFBS2lkWVFqTFlWZk5jUFN5QUUrZGhRc252QUFxNTkvVkhBQUFBQUFBQU9DSm12OEUvdzRIaUxxZjNuV3VXQ0IxcGUwZXNnL3BUM3NLZCttNFhqaHBGcFpIMy8xVEhUY1U2Y2ZSTG5ySGYzWk5QWnMrYmY5cndQdUlVUFlBV2Irai9aeTBFYUF4QUFBQUFBRHdyUEoxSU1CZW51NmVhOTlNKzBXLzE3d0NBQUFBQUFBQW5HUkxtOG9BNEpuUVVBUUFBQUFBQUFBQVVIdmkvd0FBQUFBQUFBQlFmK0wvQUFBQUFBQUFBRkIvNHY4QUFBQUFBQUFBVUgvaS93QUFBQUFBQUFCUWYrTC9BQUFBQUFBQUFGQi80djhBQUFBQUFBQUFVSC9pL3dBQUFBQUFBQUJRZitML0FBQUFBQUFBQUZCLzR2OEFBQUFBQUFBQVVIL2kvd0FBQUFBQUFBQlFmK0wvQUFBQUFBQUFBRkIvamRYMEVDc1VDUUFBQUFBQUFBRFVUaU1DQUFBQUFBQUFBSFUzVkFRQUFBQUFBQUFBVUg4aExOZjF1d3NXYmhUL3VXQnpVRXgvZWkxTnhjMDAxVnFybk4yd3VSakNLM0c0SHVOZ3R1Sm9TVmoxN1E5UXlCUUJBQUFBQUFBQUhNS3B1SjQvK090YzVMMlhaaThkSmxRL0xDUFhoYzRrZUo5VUk5dUZyZTNyRGZZOXVvWFpQUUJGSEwzNEhTV1dtOHN4NXJIODNkOTY3SWZaTVJaSEhHLzJRaThNRm5ic2NYbmhuekhlaTVOTkQ4UDJiVzJPVDNHOHZGZWViQkhiejlkR0VmNWpEdCtmSzQvbVR2ZTFibnduZHNOTDkyK21FLzc1eGhzL3l6NjVFZC9aYlAyOVNQOTZveHZDRHhyeGNqajMzM1IyNjIvZDZYNnRHNjZsWXkvei8rcnRNbjgzbkh2djluZk92L2R3NCtwdnNwQ2w0djcrMW5wYS9uSHZ0YlN2alNKL21mNzkvVnVMQzdOMDNMaVc4by9TTVU4bGRPK2pQT3VsMU9WUTN2VndLK1RacUJMQ3QzL1JYdnZlUzdlYUQwTDhZeWhySmVWL2NDMFdHVGREMWh6bENvMkg5OHZ6SzlhKzk2M1Y3cVJWVGVhTmErWkdwV3ArTjYyalNtT2V0SkQ4ZG42N2ZCNG44bnpjaEc3bjQrb3MydGNnekxXVVFWZzcwcnRhOGxFN25xVzdJVzcxMHY3ZURzVjFGN2U2NDMzbmpZZmQ5ajlHbDJLSXZlcHRNZVBWYW1PWFF1aFhPNXRVazZQditraVBYNDNUNy8zWWV2RHk0TU4rSEx3OENIUFg2T3FPT3dLZTczejArcG5mM3J2VDZwWDc2ai9TVVU3LzNVanFYNXI3Wlc3UGRaVThWcTJpZCsyOVBwaGRoM24xVHFwL3QwYVhhV1ZPUG5zRkdyZSt3YVJkcEtmL1RLKzdmaVgzYk9XbHVWZUpnNzdBQVBORHdyMzdmd0FBMkdQMCtCU09Id2NuNi8yMzFnaHdmUHI2WCtESUJ0VGo1ODJkNDdzOExEM3hNZVlrdHQrWUhYSGU2WFF1SDlQNE51K0gzY3RtR212ZS9xWUVBQUFBQUFDQVI3YmZuV0psc0dnU05Ob001NHRQWjIzRUk0dll6UFkxL2Z6cTF1ZC9HUC8wMWpqeDhQMnRZc0c3RHpyckI0L3ZIeVNUejVZQituOEFBQUFBZ0pySi9YRVhBSURIRWYvMnlYVUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBZ0dkQUJBQUFBQUFBQUFEcWJxZ0lBQUFBQUFBQUFLRDJodjhEV0s3OVVCaG9CZ0E9JywgJ2Jhc2U2NCcpKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvZGUtcG9pbnRzLWRhdGEuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiemxpYl8xIiwicmVxdWlyZSIsImRlZmF1bHQiLCJndW56aXBTeW5jIiwiQnVmZmVyIiwiZnJvbSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mongodb-js/saslprep/dist/code-points-data.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mongodb-js/saslprep/dist/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@mongodb-js/saslprep/dist/index.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst memory_code_points_1 = __webpack_require__(/*! ./memory-code-points */ \"(ssr)/./node_modules/@mongodb-js/saslprep/dist/memory-code-points.js\");\nconst mapping2space = memory_code_points_1.non_ASCII_space_characters;\nconst mapping2nothing = memory_code_points_1.commonly_mapped_to_nothing;\nconst getCodePoint = (character)=>character.codePointAt(0);\nconst first = (x)=>x[0];\nconst last = (x)=>x[x.length - 1];\nfunction toCodePoints(input) {\n    const codepoints = [];\n    const size = input.length;\n    for(let i = 0; i < size; i += 1){\n        const before = input.charCodeAt(i);\n        if (before >= 0xd800 && before <= 0xdbff && size > i + 1) {\n            const next = input.charCodeAt(i + 1);\n            if (next >= 0xdc00 && next <= 0xdfff) {\n                codepoints.push((before - 0xd800) * 0x400 + next - 0xdc00 + 0x10000);\n                i += 1;\n                continue;\n            }\n        }\n        codepoints.push(before);\n    }\n    return codepoints;\n}\nfunction saslprep(input, opts = {}) {\n    if (typeof input !== \"string\") {\n        throw new TypeError(\"Expected string.\");\n    }\n    if (input.length === 0) {\n        return \"\";\n    }\n    const mapped_input = toCodePoints(input).map((character)=>mapping2space.get(character) ? 0x20 : character).filter((character)=>!mapping2nothing.get(character));\n    const normalized_input = String.fromCodePoint.apply(null, mapped_input).normalize(\"NFKC\");\n    const normalized_map = toCodePoints(normalized_input);\n    const hasProhibited = normalized_map.some((character)=>memory_code_points_1.prohibited_characters.get(character));\n    if (hasProhibited) {\n        throw new Error(\"Prohibited character, see https://tools.ietf.org/html/rfc4013#section-2.3\");\n    }\n    if (opts.allowUnassigned !== true) {\n        const hasUnassigned = normalized_map.some((character)=>memory_code_points_1.unassigned_code_points.get(character));\n        if (hasUnassigned) {\n            throw new Error(\"Unassigned code point, see https://tools.ietf.org/html/rfc4013#section-2.5\");\n        }\n    }\n    const hasBidiRAL = normalized_map.some((character)=>memory_code_points_1.bidirectional_r_al.get(character));\n    const hasBidiL = normalized_map.some((character)=>memory_code_points_1.bidirectional_l.get(character));\n    if (hasBidiRAL && hasBidiL) {\n        throw new Error(\"String must not contain RandALCat and LCat at the same time,\" + \" see https://tools.ietf.org/html/rfc3454#section-6\");\n    }\n    const isFirstBidiRAL = memory_code_points_1.bidirectional_r_al.get(getCodePoint(first(normalized_input)));\n    const isLastBidiRAL = memory_code_points_1.bidirectional_r_al.get(getCodePoint(last(normalized_input)));\n    if (hasBidiRAL && !(isFirstBidiRAL && isLastBidiRAL)) {\n        throw new Error(\"Bidirectional RandALCat character must be the first and the last\" + \" character of the string, see https://tools.ietf.org/html/rfc3454#section-6\");\n    }\n    return normalized_input;\n}\nsaslprep.saslprep = saslprep;\nsaslprep.default = saslprep;\nmodule.exports = saslprep; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1vbmdvZGItanMvc2FzbHByZXAvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLE1BQU1BLHVCQUF1QkMsbUJBQU9BLENBQUMsa0dBQXNCO0FBQzNELE1BQU1DLGdCQUFnQkYscUJBQXFCRywwQkFBMEI7QUFDckUsTUFBTUMsa0JBQWtCSixxQkFBcUJLLDBCQUEwQjtBQUN2RSxNQUFNQyxlQUFlLENBQUNDLFlBQWNBLFVBQVVDLFdBQVcsQ0FBQztBQUMxRCxNQUFNQyxRQUFRLENBQUNDLElBQU1BLENBQUMsQ0FBQyxFQUFFO0FBQ3pCLE1BQU1DLE9BQU8sQ0FBQ0QsSUFBTUEsQ0FBQyxDQUFDQSxFQUFFRSxNQUFNLEdBQUcsRUFBRTtBQUNuQyxTQUFTQyxhQUFhQyxLQUFLO0lBQ3ZCLE1BQU1DLGFBQWEsRUFBRTtJQUNyQixNQUFNQyxPQUFPRixNQUFNRixNQUFNO0lBQ3pCLElBQUssSUFBSUssSUFBSSxHQUFHQSxJQUFJRCxNQUFNQyxLQUFLLEVBQUc7UUFDOUIsTUFBTUMsU0FBU0osTUFBTUssVUFBVSxDQUFDRjtRQUNoQyxJQUFJQyxVQUFVLFVBQVVBLFVBQVUsVUFBVUYsT0FBT0MsSUFBSSxHQUFHO1lBQ3RELE1BQU1HLE9BQU9OLE1BQU1LLFVBQVUsQ0FBQ0YsSUFBSTtZQUNsQyxJQUFJRyxRQUFRLFVBQVVBLFFBQVEsUUFBUTtnQkFDbENMLFdBQVdNLElBQUksQ0FBQyxDQUFDSCxTQUFTLE1BQUssSUFBSyxRQUFRRSxPQUFPLFNBQVM7Z0JBQzVESCxLQUFLO2dCQUNMO1lBQ0o7UUFDSjtRQUNBRixXQUFXTSxJQUFJLENBQUNIO0lBQ3BCO0lBQ0EsT0FBT0g7QUFDWDtBQUNBLFNBQVNPLFNBQVNSLEtBQUssRUFBRVMsT0FBTyxDQUFDLENBQUM7SUFDOUIsSUFBSSxPQUFPVCxVQUFVLFVBQVU7UUFDM0IsTUFBTSxJQUFJVSxVQUFVO0lBQ3hCO0lBQ0EsSUFBSVYsTUFBTUYsTUFBTSxLQUFLLEdBQUc7UUFDcEIsT0FBTztJQUNYO0lBQ0EsTUFBTWEsZUFBZVosYUFBYUMsT0FDN0JZLEdBQUcsQ0FBQyxDQUFDbkIsWUFBZUwsY0FBY3lCLEdBQUcsQ0FBQ3BCLGFBQWEsT0FBT0EsV0FDMURxQixNQUFNLENBQUMsQ0FBQ3JCLFlBQWMsQ0FBQ0gsZ0JBQWdCdUIsR0FBRyxDQUFDcEI7SUFDaEQsTUFBTXNCLG1CQUFtQkMsT0FBT0MsYUFBYSxDQUN4Q0MsS0FBSyxDQUFDLE1BQU1QLGNBQ1pRLFNBQVMsQ0FBQztJQUNmLE1BQU1DLGlCQUFpQnJCLGFBQWFnQjtJQUNwQyxNQUFNTSxnQkFBZ0JELGVBQWVFLElBQUksQ0FBQyxDQUFDN0IsWUFBY1AscUJBQXFCcUMscUJBQXFCLENBQUNWLEdBQUcsQ0FBQ3BCO0lBQ3hHLElBQUk0QixlQUFlO1FBQ2YsTUFBTSxJQUFJRyxNQUFNO0lBQ3BCO0lBQ0EsSUFBSWYsS0FBS2dCLGVBQWUsS0FBSyxNQUFNO1FBQy9CLE1BQU1DLGdCQUFnQk4sZUFBZUUsSUFBSSxDQUFDLENBQUM3QixZQUFjUCxxQkFBcUJ5QyxzQkFBc0IsQ0FBQ2QsR0FBRyxDQUFDcEI7UUFDekcsSUFBSWlDLGVBQWU7WUFDZixNQUFNLElBQUlGLE1BQU07UUFDcEI7SUFDSjtJQUNBLE1BQU1JLGFBQWFSLGVBQWVFLElBQUksQ0FBQyxDQUFDN0IsWUFBY1AscUJBQXFCMkMsa0JBQWtCLENBQUNoQixHQUFHLENBQUNwQjtJQUNsRyxNQUFNcUMsV0FBV1YsZUFBZUUsSUFBSSxDQUFDLENBQUM3QixZQUFjUCxxQkFBcUI2QyxlQUFlLENBQUNsQixHQUFHLENBQUNwQjtJQUM3RixJQUFJbUMsY0FBY0UsVUFBVTtRQUN4QixNQUFNLElBQUlOLE1BQU0saUVBQ1o7SUFDUjtJQUNBLE1BQU1RLGlCQUFpQjlDLHFCQUFxQjJDLGtCQUFrQixDQUFDaEIsR0FBRyxDQUFDckIsYUFBYUcsTUFBTW9CO0lBQ3RGLE1BQU1rQixnQkFBZ0IvQyxxQkFBcUIyQyxrQkFBa0IsQ0FBQ2hCLEdBQUcsQ0FBQ3JCLGFBQWFLLEtBQUtrQjtJQUNwRixJQUFJYSxjQUFjLENBQUVJLENBQUFBLGtCQUFrQkMsYUFBWSxHQUFJO1FBQ2xELE1BQU0sSUFBSVQsTUFBTSxxRUFDWjtJQUNSO0lBQ0EsT0FBT1Q7QUFDWDtBQUNBUCxTQUFTQSxRQUFRLEdBQUdBO0FBQ3BCQSxTQUFTMEIsT0FBTyxHQUFHMUI7QUFDbkIyQixPQUFPQyxPQUFPLEdBQUc1QixVQUNqQixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hZG1pbi8uL25vZGVfbW9kdWxlcy9AbW9uZ29kYi1qcy9zYXNscHJlcC9kaXN0L2luZGV4LmpzP2NjMDEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5jb25zdCBtZW1vcnlfY29kZV9wb2ludHNfMSA9IHJlcXVpcmUoXCIuL21lbW9yeS1jb2RlLXBvaW50c1wiKTtcbmNvbnN0IG1hcHBpbmcyc3BhY2UgPSBtZW1vcnlfY29kZV9wb2ludHNfMS5ub25fQVNDSUlfc3BhY2VfY2hhcmFjdGVycztcbmNvbnN0IG1hcHBpbmcybm90aGluZyA9IG1lbW9yeV9jb2RlX3BvaW50c18xLmNvbW1vbmx5X21hcHBlZF90b19ub3RoaW5nO1xuY29uc3QgZ2V0Q29kZVBvaW50ID0gKGNoYXJhY3RlcikgPT4gY2hhcmFjdGVyLmNvZGVQb2ludEF0KDApO1xuY29uc3QgZmlyc3QgPSAoeCkgPT4geFswXTtcbmNvbnN0IGxhc3QgPSAoeCkgPT4geFt4Lmxlbmd0aCAtIDFdO1xuZnVuY3Rpb24gdG9Db2RlUG9pbnRzKGlucHV0KSB7XG4gICAgY29uc3QgY29kZXBvaW50cyA9IFtdO1xuICAgIGNvbnN0IHNpemUgPSBpbnB1dC5sZW5ndGg7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzaXplOyBpICs9IDEpIHtcbiAgICAgICAgY29uc3QgYmVmb3JlID0gaW5wdXQuY2hhckNvZGVBdChpKTtcbiAgICAgICAgaWYgKGJlZm9yZSA+PSAweGQ4MDAgJiYgYmVmb3JlIDw9IDB4ZGJmZiAmJiBzaXplID4gaSArIDEpIHtcbiAgICAgICAgICAgIGNvbnN0IG5leHQgPSBpbnB1dC5jaGFyQ29kZUF0KGkgKyAxKTtcbiAgICAgICAgICAgIGlmIChuZXh0ID49IDB4ZGMwMCAmJiBuZXh0IDw9IDB4ZGZmZikge1xuICAgICAgICAgICAgICAgIGNvZGVwb2ludHMucHVzaCgoYmVmb3JlIC0gMHhkODAwKSAqIDB4NDAwICsgbmV4dCAtIDB4ZGMwMCArIDB4MTAwMDApO1xuICAgICAgICAgICAgICAgIGkgKz0gMTtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjb2RlcG9pbnRzLnB1c2goYmVmb3JlKTtcbiAgICB9XG4gICAgcmV0dXJuIGNvZGVwb2ludHM7XG59XG5mdW5jdGlvbiBzYXNscHJlcChpbnB1dCwgb3B0cyA9IHt9KSB7XG4gICAgaWYgKHR5cGVvZiBpbnB1dCAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgc3RyaW5nLicpO1xuICAgIH1cbiAgICBpZiAoaW5wdXQubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJldHVybiAnJztcbiAgICB9XG4gICAgY29uc3QgbWFwcGVkX2lucHV0ID0gdG9Db2RlUG9pbnRzKGlucHV0KVxuICAgICAgICAubWFwKChjaGFyYWN0ZXIpID0+IChtYXBwaW5nMnNwYWNlLmdldChjaGFyYWN0ZXIpID8gMHgyMCA6IGNoYXJhY3RlcikpXG4gICAgICAgIC5maWx0ZXIoKGNoYXJhY3RlcikgPT4gIW1hcHBpbmcybm90aGluZy5nZXQoY2hhcmFjdGVyKSk7XG4gICAgY29uc3Qgbm9ybWFsaXplZF9pbnB1dCA9IFN0cmluZy5mcm9tQ29kZVBvaW50XG4gICAgICAgIC5hcHBseShudWxsLCBtYXBwZWRfaW5wdXQpXG4gICAgICAgIC5ub3JtYWxpemUoJ05GS0MnKTtcbiAgICBjb25zdCBub3JtYWxpemVkX21hcCA9IHRvQ29kZVBvaW50cyhub3JtYWxpemVkX2lucHV0KTtcbiAgICBjb25zdCBoYXNQcm9oaWJpdGVkID0gbm9ybWFsaXplZF9tYXAuc29tZSgoY2hhcmFjdGVyKSA9PiBtZW1vcnlfY29kZV9wb2ludHNfMS5wcm9oaWJpdGVkX2NoYXJhY3RlcnMuZ2V0KGNoYXJhY3RlcikpO1xuICAgIGlmIChoYXNQcm9oaWJpdGVkKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignUHJvaGliaXRlZCBjaGFyYWN0ZXIsIHNlZSBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNDAxMyNzZWN0aW9uLTIuMycpO1xuICAgIH1cbiAgICBpZiAob3B0cy5hbGxvd1VuYXNzaWduZWQgIT09IHRydWUpIHtcbiAgICAgICAgY29uc3QgaGFzVW5hc3NpZ25lZCA9IG5vcm1hbGl6ZWRfbWFwLnNvbWUoKGNoYXJhY3RlcikgPT4gbWVtb3J5X2NvZGVfcG9pbnRzXzEudW5hc3NpZ25lZF9jb2RlX3BvaW50cy5nZXQoY2hhcmFjdGVyKSk7XG4gICAgICAgIGlmIChoYXNVbmFzc2lnbmVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1VuYXNzaWduZWQgY29kZSBwb2ludCwgc2VlIGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM0MDEzI3NlY3Rpb24tMi41Jyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgaGFzQmlkaVJBTCA9IG5vcm1hbGl6ZWRfbWFwLnNvbWUoKGNoYXJhY3RlcikgPT4gbWVtb3J5X2NvZGVfcG9pbnRzXzEuYmlkaXJlY3Rpb25hbF9yX2FsLmdldChjaGFyYWN0ZXIpKTtcbiAgICBjb25zdCBoYXNCaWRpTCA9IG5vcm1hbGl6ZWRfbWFwLnNvbWUoKGNoYXJhY3RlcikgPT4gbWVtb3J5X2NvZGVfcG9pbnRzXzEuYmlkaXJlY3Rpb25hbF9sLmdldChjaGFyYWN0ZXIpKTtcbiAgICBpZiAoaGFzQmlkaVJBTCAmJiBoYXNCaWRpTCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1N0cmluZyBtdXN0IG5vdCBjb250YWluIFJhbmRBTENhdCBhbmQgTENhdCBhdCB0aGUgc2FtZSB0aW1lLCcgK1xuICAgICAgICAgICAgJyBzZWUgaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzM0NTQjc2VjdGlvbi02Jyk7XG4gICAgfVxuICAgIGNvbnN0IGlzRmlyc3RCaWRpUkFMID0gbWVtb3J5X2NvZGVfcG9pbnRzXzEuYmlkaXJlY3Rpb25hbF9yX2FsLmdldChnZXRDb2RlUG9pbnQoZmlyc3Qobm9ybWFsaXplZF9pbnB1dCkpKTtcbiAgICBjb25zdCBpc0xhc3RCaWRpUkFMID0gbWVtb3J5X2NvZGVfcG9pbnRzXzEuYmlkaXJlY3Rpb25hbF9yX2FsLmdldChnZXRDb2RlUG9pbnQobGFzdChub3JtYWxpemVkX2lucHV0KSkpO1xuICAgIGlmIChoYXNCaWRpUkFMICYmICEoaXNGaXJzdEJpZGlSQUwgJiYgaXNMYXN0QmlkaVJBTCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdCaWRpcmVjdGlvbmFsIFJhbmRBTENhdCBjaGFyYWN0ZXIgbXVzdCBiZSB0aGUgZmlyc3QgYW5kIHRoZSBsYXN0JyArXG4gICAgICAgICAgICAnIGNoYXJhY3RlciBvZiB0aGUgc3RyaW5nLCBzZWUgaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzM0NTQjc2VjdGlvbi02Jyk7XG4gICAgfVxuICAgIHJldHVybiBub3JtYWxpemVkX2lucHV0O1xufVxuc2FzbHByZXAuc2FzbHByZXAgPSBzYXNscHJlcDtcbnNhc2xwcmVwLmRlZmF1bHQgPSBzYXNscHJlcDtcbm1vZHVsZS5leHBvcnRzID0gc2FzbHByZXA7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsibWVtb3J5X2NvZGVfcG9pbnRzXzEiLCJyZXF1aXJlIiwibWFwcGluZzJzcGFjZSIsIm5vbl9BU0NJSV9zcGFjZV9jaGFyYWN0ZXJzIiwibWFwcGluZzJub3RoaW5nIiwiY29tbW9ubHlfbWFwcGVkX3RvX25vdGhpbmciLCJnZXRDb2RlUG9pbnQiLCJjaGFyYWN0ZXIiLCJjb2RlUG9pbnRBdCIsImZpcnN0IiwieCIsImxhc3QiLCJsZW5ndGgiLCJ0b0NvZGVQb2ludHMiLCJpbnB1dCIsImNvZGVwb2ludHMiLCJzaXplIiwiaSIsImJlZm9yZSIsImNoYXJDb2RlQXQiLCJuZXh0IiwicHVzaCIsInNhc2xwcmVwIiwib3B0cyIsIlR5cGVFcnJvciIsIm1hcHBlZF9pbnB1dCIsIm1hcCIsImdldCIsImZpbHRlciIsIm5vcm1hbGl6ZWRfaW5wdXQiLCJTdHJpbmciLCJmcm9tQ29kZVBvaW50IiwiYXBwbHkiLCJub3JtYWxpemUiLCJub3JtYWxpemVkX21hcCIsImhhc1Byb2hpYml0ZWQiLCJzb21lIiwicHJvaGliaXRlZF9jaGFyYWN0ZXJzIiwiRXJyb3IiLCJhbGxvd1VuYXNzaWduZWQiLCJoYXNVbmFzc2lnbmVkIiwidW5hc3NpZ25lZF9jb2RlX3BvaW50cyIsImhhc0JpZGlSQUwiLCJiaWRpcmVjdGlvbmFsX3JfYWwiLCJoYXNCaWRpTCIsImJpZGlyZWN0aW9uYWxfbCIsImlzRmlyc3RCaWRpUkFMIiwiaXNMYXN0QmlkaVJBTCIsImRlZmF1bHQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mongodb-js/saslprep/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mongodb-js/saslprep/dist/memory-code-points.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@mongodb-js/saslprep/dist/memory-code-points.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = this && this.__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.bidirectional_l = exports.bidirectional_r_al = exports.prohibited_characters = exports.non_ASCII_space_characters = exports.commonly_mapped_to_nothing = exports.unassigned_code_points = void 0;\nconst sparse_bitfield_1 = __importDefault(__webpack_require__(/*! sparse-bitfield */ \"(ssr)/./node_modules/sparse-bitfield/index.js\"));\nconst code_points_data_1 = __importDefault(__webpack_require__(/*! ./code-points-data */ \"(ssr)/./node_modules/@mongodb-js/saslprep/dist/code-points-data.js\"));\nlet offset = 0;\nfunction read() {\n    const size = code_points_data_1.default.readUInt32BE(offset);\n    offset += 4;\n    const codepoints = code_points_data_1.default.slice(offset, offset + size);\n    offset += size;\n    return (0, sparse_bitfield_1.default)({\n        buffer: codepoints\n    });\n}\nexports.unassigned_code_points = read();\nexports.commonly_mapped_to_nothing = read();\nexports.non_ASCII_space_characters = read();\nexports.prohibited_characters = read();\nexports.bidirectional_r_al = read();\nexports.bidirectional_l = read(); //# sourceMappingURL=memory-code-points.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1vbmdvZGItanMvc2FzbHByZXAvZGlzdC9tZW1vcnktY29kZS1wb2ludHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxrQkFBa0IsSUFBSyxJQUFJLElBQUksQ0FBQ0EsZUFBZSxJQUFLLFNBQVVDLEdBQUc7SUFDakUsT0FBTyxPQUFRQSxJQUFJQyxVQUFVLEdBQUlELE1BQU07UUFBRSxXQUFXQTtJQUFJO0FBQzVEO0FBQ0FFLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCx1QkFBdUIsR0FBR0EsMEJBQTBCLEdBQUdBLDZCQUE2QixHQUFHQSxrQ0FBa0MsR0FBR0Esa0NBQWtDLEdBQUdBLDhCQUE4QixHQUFHLEtBQUs7QUFDdk0sTUFBTVEsb0JBQW9CYixnQkFBZ0JjLG1CQUFPQSxDQUFDLHNFQUFpQjtBQUNuRSxNQUFNQyxxQkFBcUJmLGdCQUFnQmMsbUJBQU9BLENBQUMsOEZBQW9CO0FBQ3ZFLElBQUlFLFNBQVM7QUFDYixTQUFTQztJQUNMLE1BQU1DLE9BQU9ILG1CQUFtQkksT0FBTyxDQUFDQyxZQUFZLENBQUNKO0lBQ3JEQSxVQUFVO0lBQ1YsTUFBTUssYUFBYU4sbUJBQW1CSSxPQUFPLENBQUNHLEtBQUssQ0FBQ04sUUFBUUEsU0FBU0U7SUFDckVGLFVBQVVFO0lBQ1YsT0FBTyxDQUFDLEdBQUdMLGtCQUFrQk0sT0FBTyxFQUFFO1FBQUVJLFFBQVFGO0lBQVc7QUFDL0Q7QUFDQWhCLDhCQUE4QixHQUFHWTtBQUNqQ1osa0NBQWtDLEdBQUdZO0FBQ3JDWixrQ0FBa0MsR0FBR1k7QUFDckNaLDZCQUE2QixHQUFHWTtBQUNoQ1osMEJBQTBCLEdBQUdZO0FBQzdCWix1QkFBdUIsR0FBR1ksUUFDMUIsOENBQThDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWRtaW4vLi9ub2RlX21vZHVsZXMvQG1vbmdvZGItanMvc2FzbHByZXAvZGlzdC9tZW1vcnktY29kZS1wb2ludHMuanM/OGNjZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYmlkaXJlY3Rpb25hbF9sID0gZXhwb3J0cy5iaWRpcmVjdGlvbmFsX3JfYWwgPSBleHBvcnRzLnByb2hpYml0ZWRfY2hhcmFjdGVycyA9IGV4cG9ydHMubm9uX0FTQ0lJX3NwYWNlX2NoYXJhY3RlcnMgPSBleHBvcnRzLmNvbW1vbmx5X21hcHBlZF90b19ub3RoaW5nID0gZXhwb3J0cy51bmFzc2lnbmVkX2NvZGVfcG9pbnRzID0gdm9pZCAwO1xuY29uc3Qgc3BhcnNlX2JpdGZpZWxkXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcInNwYXJzZS1iaXRmaWVsZFwiKSk7XG5jb25zdCBjb2RlX3BvaW50c19kYXRhXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vY29kZS1wb2ludHMtZGF0YVwiKSk7XG5sZXQgb2Zmc2V0ID0gMDtcbmZ1bmN0aW9uIHJlYWQoKSB7XG4gICAgY29uc3Qgc2l6ZSA9IGNvZGVfcG9pbnRzX2RhdGFfMS5kZWZhdWx0LnJlYWRVSW50MzJCRShvZmZzZXQpO1xuICAgIG9mZnNldCArPSA0O1xuICAgIGNvbnN0IGNvZGVwb2ludHMgPSBjb2RlX3BvaW50c19kYXRhXzEuZGVmYXVsdC5zbGljZShvZmZzZXQsIG9mZnNldCArIHNpemUpO1xuICAgIG9mZnNldCArPSBzaXplO1xuICAgIHJldHVybiAoMCwgc3BhcnNlX2JpdGZpZWxkXzEuZGVmYXVsdCkoeyBidWZmZXI6IGNvZGVwb2ludHMgfSk7XG59XG5leHBvcnRzLnVuYXNzaWduZWRfY29kZV9wb2ludHMgPSByZWFkKCk7XG5leHBvcnRzLmNvbW1vbmx5X21hcHBlZF90b19ub3RoaW5nID0gcmVhZCgpO1xuZXhwb3J0cy5ub25fQVNDSUlfc3BhY2VfY2hhcmFjdGVycyA9IHJlYWQoKTtcbmV4cG9ydHMucHJvaGliaXRlZF9jaGFyYWN0ZXJzID0gcmVhZCgpO1xuZXhwb3J0cy5iaWRpcmVjdGlvbmFsX3JfYWwgPSByZWFkKCk7XG5leHBvcnRzLmJpZGlyZWN0aW9uYWxfbCA9IHJlYWQoKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1lbW9yeS1jb2RlLXBvaW50cy5qcy5tYXAiXSwibmFtZXMiOlsiX19pbXBvcnREZWZhdWx0IiwibW9kIiwiX19lc01vZHVsZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiYmlkaXJlY3Rpb25hbF9sIiwiYmlkaXJlY3Rpb25hbF9yX2FsIiwicHJvaGliaXRlZF9jaGFyYWN0ZXJzIiwibm9uX0FTQ0lJX3NwYWNlX2NoYXJhY3RlcnMiLCJjb21tb25seV9tYXBwZWRfdG9fbm90aGluZyIsInVuYXNzaWduZWRfY29kZV9wb2ludHMiLCJzcGFyc2VfYml0ZmllbGRfMSIsInJlcXVpcmUiLCJjb2RlX3BvaW50c19kYXRhXzEiLCJvZmZzZXQiLCJyZWFkIiwic2l6ZSIsImRlZmF1bHQiLCJyZWFkVUludDMyQkUiLCJjb2RlcG9pbnRzIiwic2xpY2UiLCJidWZmZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mongodb-js/saslprep/dist/memory-code-points.js\n");

/***/ })

};
;