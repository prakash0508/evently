/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/memory-pager";
exports.ids = ["vendor-chunks/memory-pager"];
exports.modules = {

/***/ "(ssr)/./node_modules/memory-pager/index.js":
/*!********************************************!*\
  !*** ./node_modules/memory-pager/index.js ***!
  \********************************************/
/***/ ((module) => {

eval("module.exports = Pager;\nfunction Pager(pageSize, opts) {\n    if (!(this instanceof Pager)) return new Pager(pageSize, opts);\n    this.length = 0;\n    this.updates = [];\n    this.path = new Uint16Array(4);\n    this.pages = new Array(32768);\n    this.maxPages = this.pages.length;\n    this.level = 0;\n    this.pageSize = pageSize || 1024;\n    this.deduplicate = opts ? opts.deduplicate : null;\n    this.zeros = this.deduplicate ? alloc(this.deduplicate.length) : null;\n}\nPager.prototype.updated = function(page) {\n    while(this.deduplicate && page.buffer[page.deduplicate] === this.deduplicate[page.deduplicate]){\n        page.deduplicate++;\n        if (page.deduplicate === this.deduplicate.length) {\n            page.deduplicate = 0;\n            if (page.buffer.equals && page.buffer.equals(this.deduplicate)) page.buffer = this.deduplicate;\n            break;\n        }\n    }\n    if (page.updated || !this.updates) return;\n    page.updated = true;\n    this.updates.push(page);\n};\nPager.prototype.lastUpdate = function() {\n    if (!this.updates || !this.updates.length) return null;\n    var page = this.updates.pop();\n    page.updated = false;\n    return page;\n};\nPager.prototype._array = function(i, noAllocate) {\n    if (i >= this.maxPages) {\n        if (noAllocate) return;\n        grow(this, i);\n    }\n    factor(i, this.path);\n    var arr = this.pages;\n    for(var j = this.level; j > 0; j--){\n        var p = this.path[j];\n        var next = arr[p];\n        if (!next) {\n            if (noAllocate) return;\n            next = arr[p] = new Array(32768);\n        }\n        arr = next;\n    }\n    return arr;\n};\nPager.prototype.get = function(i, noAllocate) {\n    var arr = this._array(i, noAllocate);\n    var first = this.path[0];\n    var page = arr && arr[first];\n    if (!page && !noAllocate) {\n        page = arr[first] = new Page(i, alloc(this.pageSize));\n        if (i >= this.length) this.length = i + 1;\n    }\n    if (page && page.buffer === this.deduplicate && this.deduplicate && !noAllocate) {\n        page.buffer = copy(page.buffer);\n        page.deduplicate = 0;\n    }\n    return page;\n};\nPager.prototype.set = function(i, buf) {\n    var arr = this._array(i, false);\n    var first = this.path[0];\n    if (i >= this.length) this.length = i + 1;\n    if (!buf || this.zeros && buf.equals && buf.equals(this.zeros)) {\n        arr[first] = undefined;\n        return;\n    }\n    if (this.deduplicate && buf.equals && buf.equals(this.deduplicate)) {\n        buf = this.deduplicate;\n    }\n    var page = arr[first];\n    var b = truncate(buf, this.pageSize);\n    if (page) page.buffer = b;\n    else arr[first] = new Page(i, b);\n};\nPager.prototype.toBuffer = function() {\n    var list = new Array(this.length);\n    var empty = alloc(this.pageSize);\n    var ptr = 0;\n    while(ptr < list.length){\n        var arr = this._array(ptr, true);\n        for(var i = 0; i < 32768 && ptr < list.length; i++){\n            list[ptr++] = arr && arr[i] ? arr[i].buffer : empty;\n        }\n    }\n    return Buffer.concat(list);\n};\nfunction grow(pager, index) {\n    while(pager.maxPages < index){\n        var old = pager.pages;\n        pager.pages = new Array(32768);\n        pager.pages[0] = old;\n        pager.level++;\n        pager.maxPages *= 32768;\n    }\n}\nfunction truncate(buf, len) {\n    if (buf.length === len) return buf;\n    if (buf.length > len) return buf.slice(0, len);\n    var cpy = alloc(len);\n    buf.copy(cpy);\n    return cpy;\n}\nfunction alloc(size) {\n    if (Buffer.alloc) return Buffer.alloc(size);\n    var buf = new Buffer(size);\n    buf.fill(0);\n    return buf;\n}\nfunction copy(buf) {\n    var cpy = Buffer.allocUnsafe ? Buffer.allocUnsafe(buf.length) : new Buffer(buf.length);\n    buf.copy(cpy);\n    return cpy;\n}\nfunction Page(i, buf) {\n    this.offset = i * buf.length;\n    this.buffer = buf;\n    this.updated = false;\n    this.deduplicate = 0;\n}\nfunction factor(n, out) {\n    n = (n - (out[0] = n & 32767)) / 32768;\n    n = (n - (out[1] = n & 32767)) / 32768;\n    out[3] = (n - (out[2] = n & 32767)) / 32768 & 32767;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/memory-pager/index.js\n");

/***/ })

};
;